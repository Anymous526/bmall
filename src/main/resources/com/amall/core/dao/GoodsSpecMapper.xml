<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.amall.core.dao.GoodsSpecMapper" >
  <resultMap id="BaseResultMap" type="com.amall.core.bean.GoodsSpec" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="spec_name" property="specName" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
	<result column="goods_price" property="goodsPrice" jdbcType="DECIMAL" />
    <result column="goods_repository" property="goodsRepository" jdbcType="INTEGER" />
    <association property="goods" column="goods_id" javaType="com.amall.core.bean.Goods"
    			 select="com.amall.core.dao.GoodsMapper.selectByPrimaryKey"/>
    			 
    <collection property="properties" column="properties_id" ofType="com.amall.core.bean.GoodsProperty"
    			select="com.amall.core.dao.GoodsPropertyMapper.selectByExample"/>
    			
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, spec_name, goods_id,goods_price, goods_repository
  </sql>
  <select   id="selectByExample" flushCache="true"  resultMap="BaseResultMap" parameterType="com.amall.core.bean.GoodsSpecExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from amall_goodsspec
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select   id="selectByPrimaryKey" flushCache="true"  resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from amall_goodsspec
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from amall_goodsspec
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.amall.core.bean.GoodsSpecExample" >
    delete from amall_goodsspec
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.amall.core.bean.GoodsSpec" >
    insert into amall_goodsspec (id, spec_name, goods_id, goods_price, goods_repository
      )
    values (#{id,jdbcType=BIGINT}, #{specName,jdbcType=VARCHAR}, #{goodsId,jdbcType=BIGINT},
	#{goodsPrice,jdbcType=DECIMAL}, #{goodsRepository,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.amall.core.bean.GoodsSpec" >
    insert into amall_goodsspec
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="specName != null" >
        spec_name,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
	  <if test="goodsPrice != null" >
        goods_price,
      </if>
      <if test="goodsRepository != null" >
        goods_repository,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="specName != null" >
        #{specName,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=BIGINT},
      </if>
	  <if test="goodsPrice != null" >
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsRepository != null" >
        #{goodsRepository,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select   id="countByExample" parameterType="com.amall.core.bean.GoodsSpecExample" resultType="java.lang.Integer" >
    select count(*) from amall_goodsspec
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update amall_goodsspec
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.specName != null" >
        spec_name = #{record.specName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
	  <if test="record.goodsPrice != null" >
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsRepository != null" >
        goods_repository = #{record.goodsRepository,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update amall_goodsspec
    set id = #{record.id,jdbcType=BIGINT},
      spec_name = #{record.specName,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=BIGINT},
	  goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_repository = #{record.goodsRepository,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.amall.core.bean.GoodsSpec" >
    update amall_goodsspec
    <set >
      <if test="specName != null" >
        spec_name = #{specName,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
	    <if test="goodsPrice != null" >
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsRepository != null" >
        goods_repository = #{goodsRepository,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.amall.core.bean.GoodsSpec" >
    update amall_goodsspec
    set spec_name = #{specName,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=BIGINT},
	  goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_repository = #{goodsRepository,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>