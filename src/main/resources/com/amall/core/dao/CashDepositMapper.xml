<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.amall.core.dao.CashDepositMapper" >
  <resultMap id="BaseResultMap" type="com.amall.core.bean.CashDeposit" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="cash_status" property="cashStatus" jdbcType="INTEGER" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="pay_order_id" property="payOrderId" jdbcType="BIGINT" />
    <result column="refund_id" property="refundId" jdbcType="BIGINT" />
    <result column="seller_user_id" property="sellerUserId" jdbcType="BIGINT" />
    <association property="refund" column="refund_id" javaType="com.amall.core.bean.Refund"
   			 select="com.amall.core.dao.RefundMapper.selectByPrimaryKey"/>
    <association property="alipayOrder" column="pay_order_id" javaType="com.amall.core.bean.AlipayOrder"
   			 select="com.amall.core.dao.AlipayOrderMapper.selectByPrimaryKey"/>
			 <association property="sellerUser" column="seller_user_id" javaType="com.amall.core.bean.User"
   			 select="com.amall.core.dao.UserMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_time, cash_status, payment_time, pay_order_id, refund_id, seller_user_id
  </sql>
  <select   id="selectByExample" flushCache="true"  resultMap="BaseResultMap" parameterType="com.amall.core.bean.CashDepositExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from amall_cash_deposit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select   id="selectByExampleWithPage" flushCache="true"  resultMap="BaseResultMap" parameterType="com.amall.core.bean.CashDepositExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from amall_cash_deposit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
	 limit #{startRow},#{pageSize}
	</if>
  </select>
  <select   id="selectByPrimaryKey" flushCache="true"  resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from amall_cash_deposit
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from amall_cash_deposit
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.amall.core.bean.CashDepositExample" >
    delete from amall_cash_deposit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.amall.core.bean.CashDeposit" >
    insert into amall_cash_deposit (id, create_time, cash_status, 
      payment_time, pay_order_id, refund_id, 
      seller_user_id)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{cashStatus,jdbcType=INTEGER}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{payOrderId,jdbcType=BIGINT}, #{refundId,jdbcType=BIGINT}, 
      #{sellerUserId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.amall.core.bean.CashDeposit" >
    insert into amall_cash_deposit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="cashStatus != null" >
        cash_status,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="payOrderId != null" >
        pay_order_id,
      </if>
      <if test="refundId != null" >
        refund_id,
      </if>
      <if test="sellerUserId != null" >
        seller_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cashStatus != null" >
        #{cashStatus,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payOrderId != null" >
        #{payOrderId,jdbcType=BIGINT},
      </if>
      <if test="refundId != null" >
        #{refundId,jdbcType=BIGINT},
      </if>
      <if test="sellerUserId != null" >
        #{sellerUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select   id="countByExample" parameterType="com.amall.core.bean.CashDepositExample" resultType="java.lang.Integer" >
    select count(*) from amall_cash_deposit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update amall_cash_deposit
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cashStatus != null" >
        cash_status = #{record.cashStatus,jdbcType=INTEGER},
      </if>
      <if test="record.paymentTime != null" >
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payOrderId != null" >
        pay_order_id = #{record.payOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.refundId != null" >
        refund_id = #{record.refundId,jdbcType=BIGINT},
      </if>
      <if test="record.sellerUserId != null" >
        seller_user_id = #{record.sellerUserId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update amall_cash_deposit
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      cash_status = #{record.cashStatus,jdbcType=INTEGER},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      pay_order_id = #{record.payOrderId,jdbcType=BIGINT},
      refund_id = #{record.refundId,jdbcType=BIGINT},
      seller_user_id = #{record.sellerUserId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.amall.core.bean.CashDeposit" >
    update amall_cash_deposit
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cashStatus != null" >
        cash_status = #{cashStatus,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payOrderId != null" >
        pay_order_id = #{payOrderId,jdbcType=BIGINT},
      </if>
      <if test="refundId != null" >
        refund_id = #{refundId,jdbcType=BIGINT},
      </if>
      <if test="sellerUserId != null" >
        seller_user_id = #{sellerUserId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.amall.core.bean.CashDeposit" >
    update amall_cash_deposit
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      cash_status = #{cashStatus,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      pay_order_id = #{payOrderId,jdbcType=BIGINT},
      refund_id = #{refundId,jdbcType=BIGINT},
      seller_user_id = #{sellerUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>