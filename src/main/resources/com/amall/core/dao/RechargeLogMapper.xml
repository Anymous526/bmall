<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.amall.core.dao.RechargeLogMapper" >
  <resultMap id="BaseResultMap" type="com.amall.core.bean.RechargeLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="recharge_fee" property="rechargeFee" jdbcType="DECIMAL" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
    <result column="pay_id" property="payId" jdbcType="BIGINT" />
    <result column="recharge_gold" property="rechargeGold" jdbcType="INTEGER" />
     <association property="user" column="user_id" javaType="com.amall.core.bean.User" select="com.amall.core.dao.UserMapper.selectByPrimaryKey"/>
    <association property="payOrder" column="pay_id" javaType="com.amall.core.bean.AlipayOrder" select="com.amall.core.dao.AlipayOrderMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, add_time, recharge_fee, user_id, pay_type, pay_id, recharge_gold
  </sql>
  <select   id="selectByExample" flushCache="true"  resultMap="BaseResultMap" parameterType="com.amall.core.bean.RechargeLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from amall_recharge_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select   id="selectRechargeLogList" flushCache="true"  resultMap="BaseResultMap" parameterType="java.lang.Long" >
  	select 
  	<include refid="Base_Column_List" />
    from amall_recharge_log
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  
  
  <select   id="selectByExampleAndPage" flushCache="true"  resultMap="BaseResultMap" parameterType="com.amall.core.bean.RechargeLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from amall_recharge_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
	 limit #{startRow},#{pageSize}
	</if>
  </select>
  <select   id="selectByPrimaryKey" flushCache="true"  resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from amall_recharge_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from amall_recharge_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.amall.core.bean.RechargeLogExample" >
    delete from amall_recharge_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.amall.core.bean.RechargeLog" >
    insert into amall_recharge_log (id, add_time, recharge_fee, 
      user_id, pay_type, pay_id, 
      recharge_gold
      )
    values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP}, #{rechargeFee,jdbcType=DECIMAL}, 
      #{userId,jdbcType=BIGINT}, #{payType,jdbcType=VARCHAR}, #{payId,jdbcType=BIGINT}, 
      #{rechargeGold,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.amall.core.bean.RechargeLog" >
    insert into amall_recharge_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="rechargeFee != null" >
        recharge_fee,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payId != null" >
        pay_id,
      </if>
      <if test="rechargeGold != null" >
        recharge_gold,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rechargeFee != null" >
        #{rechargeFee,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payId != null" >
        #{payId,jdbcType=BIGINT},
      </if>
      <if test="rechargeGold != null" >
      #{rechargeGold,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <select   id="countByExample" parameterType="com.amall.core.bean.RechargeLogExample" resultType="java.lang.Integer" >
    select count(*) from amall_recharge_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update amall_recharge_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rechargeFee != null" >
        recharge_fee = #{record.rechargeFee,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.payId != null" >
        pay_id = #{record.payId,jdbcType=BIGINT},
      </if>
      <if test="record.rechargeGold != null" >
        recharge_gold = #{record.rechargeGold,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update amall_recharge_log
    set id = #{record.id,jdbcType=BIGINT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      recharge_fee = #{record.rechargeFee,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=BIGINT},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      pay_id = #{record.payId,jdbcType=BIGINT},
      recharge_gold = #{record.rechargeGold,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.amall.core.bean.RechargeLog" >
    update amall_recharge_log
    <set >
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rechargeFee != null" >
        recharge_fee = #{rechargeFee,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payId != null" >
        pay_id = #{payId,jdbcType=BIGINT},
      </if>
      <if test="rechargeGold != null" >
        recharge_gold = #{rechargeGold,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.amall.core.bean.RechargeLog" >
    update amall_recharge_log
    set add_time = #{addTime,jdbcType=TIMESTAMP},
      recharge_fee = #{rechargeFee,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=VARCHAR},
      pay_id = #{payId,jdbcType=BIGINT},
      recharge_gold = #{rechargeGold,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  

</mapper>